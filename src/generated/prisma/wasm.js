
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InstitucionesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  direccion_principal: 'direccion_principal',
  nit: 'nit',
  nombre_contacto: 'nombre_contacto',
  telefono_contacto: 'telefono_contacto',
  email: 'email',
  password: 'password',
  tiene_sedes: 'tiene_sedes',
  jornadas: 'jornadas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SedesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  jornadas: 'jornadas',
  institucion_id: 'institucion_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AdministradoresScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  telefono: 'telefono',
  cargo: 'cargo',
  institucion_id: 'institucion_id',
  fecha_nacimiento: 'fecha_nacimiento',
  direccion: 'direccion',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Instituciones: 'Instituciones',
  Sedes: 'Sedes',
  Administradores: 'Administradores'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\jonny\\OneDrive\\Escritorio\\agenda-virtual\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\jonny\\OneDrive\\Escritorio\\agenda-virtual\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel Instituciones {\n  id                  Int               @id @default(autoincrement())\n  nombre              String            @db.VarChar(255)\n  direccion_principal String            @db.VarChar(500)\n  nit                 String            @db.VarChar(50)\n  nombre_contacto     String            @db.VarChar(255)\n  telefono_contacto   String            @db.VarChar(20)\n  email               String            @unique @db.VarChar(255)\n  password            String            @db.VarChar(255)\n  tiene_sedes         Boolean           @default(false)\n  jornadas            String[]          @default([])\n  created_at          DateTime          @default(now()) @map(\"created_at\")\n  updated_at          DateTime          @updatedAt @map(\"updated_at\")\n  administradores     Administradores[]\n  sedes               Sedes[]\n\n  @@map(\"Instituciones\")\n}\n\nmodel Sedes {\n  id             Int           @id @default(autoincrement())\n  nombre         String        @db.VarChar(255)\n  jornadas       String[]      @default([])\n  institucion_id Int\n  created_at     DateTime      @default(now()) @map(\"created_at\")\n  updated_at     DateTime      @updatedAt @map(\"updated_at\")\n  institucion    Instituciones @relation(fields: [institucion_id], references: [id], onDelete: Cascade)\n\n  @@map(\"Sedes\")\n}\n\nmodel Administradores {\n  id               Int           @id @default(autoincrement())\n  nombre           String        @db.VarChar(255)\n  apellido         String        @db.VarChar(255)\n  email            String        @unique @db.VarChar(255)\n  telefono         String?       @db.VarChar(20)\n  cargo            String        @db.VarChar(100)\n  institucion_id   Int\n  fecha_nacimiento DateTime?     @db.Date\n  direccion        String?\n  activo           Boolean       @default(true)\n  created_at       DateTime      @default(now()) @map(\"created_at\")\n  updated_at       DateTime      @updatedAt @map(\"updated_at\")\n  institucion      Instituciones @relation(fields: [institucion_id], references: [id], onDelete: Cascade)\n\n  @@map(\"Administradores\")\n}\n",
  "inlineSchemaHash": "02ba19d046ae0cdbe1d1224f002537a90bc1a3a4b6dae6b987c81e03b9507842",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Instituciones\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion_principal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre_contacto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono_contacto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tiene_sedes\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"jornadas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"administradores\",\"kind\":\"object\",\"type\":\"Administradores\",\"relationName\":\"AdministradoresToInstituciones\"},{\"name\":\"sedes\",\"kind\":\"object\",\"type\":\"Sedes\",\"relationName\":\"InstitucionesToSedes\"}],\"dbName\":\"Instituciones\"},\"Sedes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jornadas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institucion_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"institucion\",\"kind\":\"object\",\"type\":\"Instituciones\",\"relationName\":\"InstitucionesToSedes\"}],\"dbName\":\"Sedes\"},\"Administradores\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institucion_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha_nacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"institucion\",\"kind\":\"object\",\"type\":\"Instituciones\",\"relationName\":\"AdministradoresToInstituciones\"}],\"dbName\":\"Administradores\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

